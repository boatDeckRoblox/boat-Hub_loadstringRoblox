repeat wait() until game:IsLoaded() and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.HumanoidRootPart and shared.GuiLibrary
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (3==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v65=0;while true do if (0==v65) then v19=v1(v4(v30,1,1));return "";end end else local v66=v3(v1(v30,16));if v19 then local v70=v6(v66,v19);v19=nil;return v70;else return v66;end end end);local function v20(v31,v32,v33)if v33 then local v67=(v31/((8 -6)^(v32-1)))%((5 -(8 -5))^(((v33-((2 -1) + 0)) -(v32-(1 + 0))) + (1 -0)));return v67-(v67%(141 -(49 + 91)));else local v68=((78 + 1360) -(201 + (4375 -3140)))^(v32-1);return (((v31%(v68 + v68))>=v68) and (1 + 0 + 0)) or (0 + 0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + 1 + 1);v18=v18 + (5 -3);return (v40 * 256) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + (13 -10));v18=v18 + 3 + 1;return (v44 * (15945723 + 831493)) + (v43 * 65536) + (v42 * 256) + v41;end local function v24()local v45=0 + 0;local v46;local v47;while true do if (v45==(141 -(22 + 118))) then return (( -((1218 + 32) -(126 + 1122)) * v20(v47,1268 -(922 + 314))) + (2 -1)) * ((3 -1)^(v20(v47,1214 -(1192 + 1),120 -89) -(1430 -(406 + 1)))) * ((((v20(v47,1 + 0,12 + 8) * ((7 -5)^(39 -7))) + v46)/((1120 -(724 + 394))^(250 -198))) + (547 -(214 + 332)));end if (v45==(0 + 0 + 0)) then v46=v23();v47=v23();v45=(1 + 0) -0;end end end local function v25(v34)local v48;if  not v34 then local v69=(0 -0) -0;while true do if (v69==(1408 -(829 + 579))) then v34=v23();if (v34==(0 + 0)) then return "";end break;end end end v48=v4(v16,v18,(v18 + v34) -(3 -2));v18=v18 + v34;local v49={};for v63=1 + (495 -(280 + 215)), #v48 do v49[v63]=v3(v2(v4(v48,v63,v63)));end return v7(v49);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v50=0 + 0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50==0) then v51=1179 -(803 + 376);v52=nil;v50=1 + 0;end if (v50==(2 + 0)) then v55=nil;v56=nil;v50=3;end if (v50==1) then v53=nil;v54=nil;v50=1 + 1;end if (v50~=(1221 -(359 + 858))) then else while true do if (v51==(1043 -(331 + 712))) then local v76=0 + 0;while true do if (v76==0) then v52=0 -0;v53=nil;v76=1 + 0;end if (v76~=(257 -(86 + 170))) then else v51=1028 -(737 + 290);break;end end end if (v51~=3) then else v58=nil;while true do local v79=0 -0;while true do if ((1348 -(201 + 1146))~=v79) then else if (v52~=0) then else v53={};v54={};v55={};v52=851 -(525 + 325);end if (v52~=3) then else local v98=0;while true do if ((0 + 0)==v98) then for v103=1339 -(762 + 576),v23() do v54[v103-(315 -(270 + 44))]=v28();end for v105=1 + 0,v23() do v55[v105]=v23();end v98=1;end if (v98==(1 -0)) then return v56;end end end break;end if (v79==(0 + 0)) then if (1~=v52) then else local v99=0 -0;local v100;while true do if (v99==(0 -0)) then v100=0 -0;while true do if (v100==(0 + 0)) then v56={v53,v54,nil,v55};v57=v23();v100=1 + 0;end if (v100==(1237 -(368 + 868))) then v58={};v52=1084 -(121 + 961);break;end end break;end end end if (v52==2) then local v101=0 + 0;local v102;while true do if (v101~=0) then else v102=0;while true do if (v102~=(0 -0)) then else local v107=0;while true do if (v107~=(2 -1)) then else v102=1;break;end if (v107==0) then for v157=4 -3,v57 do local v158=0 -0;local v159;local v160;local v161;local v162;while true do if (v158==(2 + 0)) then while true do if (v159~=(1861 -(440 + 1421))) then else local v240=0 + 0;while true do if (v240==(1859 -(798 + 1060))) then v159=3 -2;break;end if (v240~=0) then else local v265=0 + 0;while true do if (v265~=(1 -0)) then else v240=4 -3;break;end if (v265~=(0 + 0)) then else v160=0 -0;v161=nil;v265=1;end end end end end if (v159~=(1676 -(839 + 836))) then else v162=nil;while true do if ((3 -2)~=v160) then else if (v161==1) then v162=v21()~=(0 + 0);elseif (v161==2) then v162=v24();elseif (v161==(6 -3)) then v162=v25();end v58[v157]=v162;break;end if (v160==(0 + 0)) then local v267=241 -(89 + 152);local v268;while true do if ((1665 -(706 + 959))==v267) then v268=1684 -(1647 + 37);while true do if (v268~=(1396 -(1344 + 51))) then else v160=2 -1;break;end if ((0 -0)==v268) then local v307=687 -(445 + 242);while true do if (v307==(120 -(26 + 94))) then v161=v21();v162=nil;v307=1 -0;end if (v307==1) then v268=169 -(152 + 16);break;end end end end break;end end end end break;end end break;end if (1~=v158) then else v161=nil;v162=nil;v158=2;end if (v158==(0 -0)) then v159=0 -0;v160=nil;v158=1653 -(134 + 1518);end end end v56[7 -4]=v21();v107=1880 -(1129 + 750);end end end if (v102==(1129 -(790 + 338))) then for v108=1 + 0,v23() do local v109=0 -0;local v110;local v111;local v112;local v113;while true do if (1==v109) then v112=nil;v113=nil;v109=6 -4;end if (v109==(0 + 0)) then v110=0;v111=nil;v109=1 + 0;end if (v109==(3 -1)) then while true do if (v110==(1 + 0)) then v113=nil;while true do if (v111~=(1 + 0)) then else while true do if (v112~=(0 -0)) then else v113=v21();if (v20(v113,1 + 0,682 -(125 + 556))==(0 + 0)) then local v284=55 -(5 + 50);local v285;local v286;local v287;local v288;local v289;while true do if (v284~=(0 + 0)) then else v285=0 -0;v286=nil;v284=376 -(323 + 52);end if (v284==(1 + 1)) then v289=nil;while true do if ((3 -2)==v285) then local v322=0;while true do if ((1700 -(1600 + 100))~=v322) then else v288=nil;v289=nil;v322=1;end if (v322==1) then v285=1 + 1;break;end end end if ((0 + 0)==v285) then local v323=0 -0;while true do if (v323~=(0 -0)) then else v286=0 + 0;v287=nil;v323=1 + 0;end if (v323~=(1 + 0)) then else v285=1 + 0;break;end end end if (v285~=(3 -1)) then else while true do if (0~=v286) then else local v325=0 -0;local v326;while true do if (v325~=(1810 -(1209 + 601))) then else v326=444 -(67 + 377);while true do if (v326==0) then local v342=0;while true do if (v342~=(0 -0)) then else v287=v20(v113,2,3 + 0);v288=v20(v113,73 -(37 + 32),19 -13);v342=1 + 0;end if (v342==1) then v326=1 + 0;break;end end end if (v326==(3 -2)) then v286=1 + 0;break;end end break;end end end if (v286~=(4 -2)) then else if (v20(v288,1 -0,1 + 0)==(1596 -(1170 + 425))) then v289[2 + 0]=v58[v289[3 -1]];end if (v20(v288,2 + 0,2 + 0)==1) then v289[6 -3]=v58[v289[8 -5]];end v286=4 -1;end if (v286==(2 + 1)) then if (v20(v288,4 -1,1959 -(1531 + 425))==(1 + 0)) then v289[4 + 0]=v58[v289[19 -15]];end v53[v108]=v289;break;end if (v286==(906 -(233 + 672))) then local v328=0 + 0;while true do if ((1 + 0)==v328) then v286=1 + 1;break;end if (v328==(1961 -(1409 + 552))) then v289={v22(),v22(),nil,nil};if (v287==0) then local v340=1781 -(1664 + 117);while true do if (v340==(496 -(134 + 362))) then v289[3]=v22();v289[11 -7]=v22();break;end end elseif (v287==(758 -(148 + 609))) then v289[3]=v23();elseif (v287==(9 -7)) then v289[3]=v23() -((2 -0)^(59 -43));elseif (v287==(2 + 1)) then local v350=0 + 0;local v351;local v352;while true do if (v350==(3 -2)) then while true do if (v351~=(825 -(603 + 222))) then else v352=704 -(179 + 525);while true do if (v352==0) then v289[3]=v23() -((2 + 0)^(8 + 8));v289[4]=v22();break;end end break;end end break;end if (v350~=(0 -0)) then else v351=0 -0;v352=nil;v350=2 -1;end end end v328=1 -0;end end end end break;end end break;end if ((1 + 0)~=v284) then else v287=nil;v288=nil;v284=2;end end end break;end end break;end if (0==v111) then local v241=0;while true do if (v241~=(274 -(79 + 195))) then else v112=0;v113=nil;v241=1;end if ((3 -2)==v241) then v111=1;break;end end end end break;end if (0==v110) then local v222=0 + 0;while true do if (v222==(1 + 0)) then v110=1114 -(357 + 756);break;end if (0~=v222) then else v111=0;v112=nil;v222=2 -1;end end end end break;end end end v52=12 -9;break;end end break;end end end v79=1982 -(1337 + 644);end end end break;end if (v51~=(148 -(34 + 112))) then else local v77=0 -0;while true do if (v77==0) then v56=nil;v57=nil;v77=1;end if (v77==1) then v51=11 -8;break;end end end if (v51==(1 + 0)) then local v78=807 -(701 + 106);while true do if (v78==1) then v51=2 + 0;break;end if (v78==0) then v54=nil;v55=nil;v78=2 -1;end end end end break;end if (v50==(2 + 1)) then v57=nil;v58=nil;v50=623 -(304 + 315);end end end local function v29(v35,v36,v37)local v59=0;local v60;local v61;local v62;while true do if (v59==0) then v60=v35[1];v61=v35[2];v59=1;end if (1==v59) then v62=v35[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v12("#",...) -1;local function v75()local v80=v60;local v81=Const;local v82=v61;local v83=v62;local v84=v27;local v85={};local v86={};local v87={};for v93=1448 -(1117 + 331),v74 do if ((v93>=v83) or ((2452 -(1790 + 204))>=(4042 -(1449 + 517)))) then v85[v93-v83]=v73[v93 + (1 -(0 -0))];else v87[v93]=v73[v93 + 1 + 0];end end local v88=(v74-v83) + (2 -1);local v89;local v90;while true do local v94=349 -(147 + 202);while true do if (((8740 -5246)>((423 + 2507) -868)) and (v94==(704 -(348 + 355)))) then if ((v90<=(7 + (2013 -(567 + 1432)))) or ((2189 -(24 + 79))>=(9556 -6248))) then if ((((6883 -3053) -1801)<((17245 -13437) -(138 + 373))) and (v90<=(18 -8))) then if (((283 + 1023)==((2157 -(9 + 701)) -(93 + 48))) and (v90<=(132 -(60 + 68)))) then if (((698 + 2192)==(4519 -1629)) and (v90<=(2 -1))) then if ((v90>(0 + 0)) or ((4817 -2939)>(6806 -3803))) then v71=v89[350 -(158 + 189)];else local v115=0 + 0;local v116;local v117;local v118;local v119;while true do if (((8867 -4813)==(5682 -(1160 + 468))) and (v115==((235 -121) -(29 + (1377 -(1283 + 11)))))) then while true do if (((202 + 295 + (1336 -(1132 + 117)))<(8173 -5267)) and (v116==(0 + 0))) then v117=v89[1 + 1];v118=v87[v117];v116=1 -0;end if (((5868 -4064)<(1984 + 2216)) and ((2 -1)==v116)) then v119=v87[v117 + ((1430 + 241) -(503 + 1166))];if ((v119>(0 -0)) or ((3447 -(310 + 814))==(1269 + 1795))) then if (((3293 -(1089 + 563))>262) and (v118>v87[v117 + (1002 -(62 + 939))])) then v71=v89[5 -2];else v87[v117 + 1 + 2]=v118;end elseif (((12 + 2876)==(1213 + 1675)) and (v118<v87[v117 + (1581 -(744 + 836))])) then v71=v89[2 + 1];else v87[v117 + (7 -4)]=v118;end break;end end break;end if ((v115==(0 + 0)) or ((2734 -(1379 + 456))==(131 + 38))) then v116=83 -(53 + 30);v117=nil;v115=71 -(65 + 5);end if ((v115==((524 + 1080) -(811 + 199 + 593))) or ((1507 + 54)<(446 + (2250 -1188)))) then v118=nil;v119=nil;v115=2 + 0 + 0;end end end elseif (((3440 -(126 + 1007))>(3850 -1555)) and (v90<=(4 -2))) then v87[v89[734 -(454 + 278)]]=v87[v89[1274 -(335 + 418 + 518)]];elseif ((v90==(3 + 0)) or ((1779 + 375)==(1492 -1054))) then local v163=191 -(57 + (2075 -(216 + 1725)));local v164;local v165;local v166;local v167;local v168;local v169;while true do if (((2679 -(1829 + 57))<(3211 + 1610)) and (v163==(4 -1))) then while true do if ((v164==(1854 -(887 + 965))) or ((6840 -(969 + 873))<((4331 + 9167) -9011))) then local v250=1001 -(863 + 138);while true do if (((1958 + 2314)==(198 + 4074)) and (v250==(0 + 0))) then local v280=1068 -(322 + (1334 -(233 + 355)));while true do if (((1 + 0)==v280) or (((3039 -1085) -(1608 + 176))>(926 + 471))) then v250=1 -(0 -0);break;end if (((1456 + 713)==(6947 -4778)) and (v280==(632 -(622 + 10)))) then for v302=1,v166 do v87[v167 + v302]=v168[v302];end v169=v168[1];v280=4 -3;end end end if (((44 + 707)<=(5086 -(588 + 1211))) and (v250==(1 + 0))) then v164=2 + 1;break;end end end if (((1 + 0)==v164) or ((2977 -((170 -76) + 56))==(4580 -((1568 -(59 + 1296)) + 1082)))) then local v251=0 -0;while true do if (((2 -1)==v251) or ((1302 + 1644)>=(5023 -1237))) then v164=1356 -(327 + 1027);break;end if (((1518 + 295)<=(3382 -(61 + 359))) and (v251==(0 + 0))) then v167=v165 + (4 -2);v168={v87[v165](v87[v165 + (298 -(127 + 170))],v87[v167])};v251=1 + (837 -(184 + 653));end end end if ((v164==(60 -((95 -63) + 11 + 17))) or ((4373 -1972)==(5855 -(165 + 1320)))) then local v252=0 -0;local v253;while true do if (((102 + 914)<(176 + 4221)) and (v252==(797 -((1367 -(827 + 299)) + 556)))) then v253=0 + 0;while true do if ((v253==(1 + 0)) or ((8973 -4259)<=(4998 -(633 + 932)))) then v164=2 -1;break;end if ((((2376 -1257) -339)<(6717 -(1709 + 208))) and (v253==(616 -(344 + 272)))) then local v301=0 + 0;while true do if (((16145 -(13727 -(1326 + 210)))>=(2493 -(994 + 542))) and (v301==1)) then v253=1259 -(311 + 888 + 59);break;end if ((v301==(0 + 0)) or ((2045 -(1669 -789))>=(4396 -(144 + 879)))) then v165=v89[311 -(23 + 286)];v166=v89[(4 + 7) -7];v301=2 -1;end end end end break;end end end if (((14 -11)==v164) or ((3359 -(981 + 475))<(82 + 54 + 177))) then if (v169 or ((4211 -(548 + (1473 -(202 + 1100))))>=((958 -(312 + 372)) + 3935))) then local v271=0 -(0 + 0);while true do if ((v271==(1985 -(1521 + 464))) or (((2582 -901) -(81 + 232))>=(722 + 3295))) then v87[v167]=v169;v71=v89[9 -6];break;end end else v71=v71 + (1 -0);end break;end end break;end if ((v163==((2 -1) + 1)) or ((8263 -6052)<(993 -(832 + 133)))) then local v223=1361 -(649 + 712);while true do if ((v223==(0 -0)) or ((22 + 3749)<=(2169 -(387 + (715 -261))))) then v168=nil;v169=nil;v223=(3 -1) -1;end if ((v223==(2 -1)) or ((1128 + 2382)>(1174 + 2901))) then v163=5 -2;break;end end end if ((((5126 -(31 + 51)) -(313 + 144))>((2432 -(709 + 613)) -(529 + 67))) and (v163==(0 + 0))) then v164=0 + 0;v165=nil;v163=572 -((685 -(85 + 265)) + 236);end if (((1021 -(583 + 202))<=(661 + 1244)) and (v163==(2 -1))) then local v224=0 -0;while true do if ((v224==(1675 -(107 + 1567))) or (((17714 -11810) -4274)>=((2752 -(14 + 174)) -(59 + 856)))) then v163=(720 -(241 + 472)) -5;break;end if (((3746 -2678)<(2307 + 866)) and (v224==(0 -0))) then v166=nil;v167=nil;v224=729 -(205 + 523);end end end end else v87[v89[1 + 1 + 0]]=v87[v89[5 -2]] -v89[(212 + 140) -((392 -(15 + 228)) + 199)];end elseif ((v90<=(1 + 6)) or (((19443 -14365) -1092)==(2691 + 1220))) then if ((v90<=(1342 -(519 + 818))) or ((6875 -5148)>(81 + 4608))) then if (((1386 + 2484)<=(1510 + 2483)) and v87[v89[7 -5]]) then v71=v71 + (2 -1) + 0;else v71=v89[(2031 -(815 + 372)) -(766 + (719 -(604 + 40)))];end elseif ((v90>6) or (2393>(4291 + 552))) then local v171=0 + 0;local v172;local v173;local v174;while true do if ((v171==(1298 -(52 + 1246))) or ((5134 -1595)>=(6009 -(971 + 425)))) then v172=0 + 0;v173=nil;v171=571 -(99 + 18 + 453);end if (((3033 -1140)<(3596 + 262)) and (v171==(1 + 0))) then v174=nil;while true do if (((754 + 213)<=(4780 -1832)) and (v172==(1 + 0))) then while true do if ((v173==((0 -0) -0)) or ((1030 + 2350)<(82 + 520))) then v174=v87[v89[11 -7]];if ((3507>(890 -591)) and  not v174) then InstrPoint=InstrPoint + 1;else local v296=(343 -(183 + 160)) -0;local v297;while true do if ((v296==(0 + 0 + 0)) or (((4133 + 7258) -7727)==(3799 -2834))) then v297=(4367 -2818) -((2642 -1419) + 326);while true do if (((2219 -(174 + 711))<=(12585 -8962)) and (v297==0)) then v87[v89[2 -0]]=v174;InstrPoint=v89[853 -(142 + 708)];break;end end break;end end end break;end end break;end if ((v172==(0 -0)) or ((88 + 1546 + 3071)==((3041 -(96 + 1318)) + 3341))) then v173=0 -0;v174=nil;v172=4 -3;end end break;end end else v87[v89[1429 -(801 + 626)]][v89[1532 -(545 + 984)]]=v87[v89[1897 -(1104 + 789)]];end elseif ((v90<=((746 -431) -(176 + 131))) or ((11099 -6562)>=(6166 -1403))) then do return;end elseif (((9 + 442)<(848 + 1149)) and (v90==(1995 -(155 + 1831)))) then v87[v89[6 -(1449 -(519 + 926))]]= #v87[v89[85 -((16 -7) + 73)]];elseif ((v87[v89[1331 -(468 + 861)]]~=v87[v89[1086 -(206 + 876)]]) or ((72 + 632)>((8925 -(63 + 763)) -4280))) then v71=v71 + (1026 -(118 + 8 + 899));else v71=v89[836 -(694 + 139)];end elseif ((v90<=(26 -(151 -(103 + 37)))) or ((323 + 1541)==(2492 -(786 + 193)))) then if ((v90<=((911 -237) -(633 + 29))) or ((13579 -8740)<(3447 -(195 + (1884 -(300 + 265)))))) then if (((809 + 1301)<=(1793 + 1691)) and (v90>(26 -15))) then v87[v89[1 + 1]]=v36[v89[7 -4]];else local v122=0 + 0;local v123;local v124;local v125;local v126;while true do if ((v122==2) or ((4733 -(600 + 83 + 416))<=(1439 -(170 + 148)))) then while true do if (((1513 + 1917)>1421) and ((1917 -(1061 + 856))==v123)) then local v227=0 + 0;while true do if (((2259 + 67)<(3566 -(637 + 86 + 83))) and (v227==((325 + 944) -(203 + 1066)))) then local v257=0 + 0;while true do if (((3 -2)==v257) or ((189 + 3893)<(3788 -1287))) then v227=1 -(0 + 0);break;end if ((((6839 -(1008 + 512)) -3251)<(17293 -12350)) and (v257==(796 -(667 + 129)))) then v124=v89[2 + 0];v125={v87[v124](v13(v87,v124 + (1451 -(919 + 531)),v72))};v257=1 + 0;end end end if ((v227==(1 -0)) or ((1950 -(284 + 117))>(2296 -(414 + 42)))) then v123=1 + 0 + 0;break;end end end if (((4662 -(120 + 710))==(15512 -(6225 + 5455))) and (v123==((2 + 0) -1))) then v126=1470 -(1412 + 19 + 39);for v242=v124,v89[11 -7] do local v243=38 -(30 + 8);local v244;local v245;while true do if (((149 + 1116)>=1122) and (v243==1)) then while true do if (((6589 -(686 + 1023))>(4723 -(57 + (1235 -(530 + 12))))) and (((971 -(468 + 503)) -0)==v244)) then v245=483 -(182 + 301);while true do if ((v245==(0 -0)) or ((730 + 173)>=((1 + 4834) -(645 + 684)))) then v126=v126 + 1 + 0;v87[v242]=v125[v126];break;end end break;end end break;end if ((((1658 + 1116) -(171 + 124))<=(10370 -6536)) and (v243==(1624 -(1172 + 452)))) then v244=0 + 0;v245=nil;v243=188 -(40 + 147);end end end break;end end break;end if (((0 -0)==v122) or ((1456 -(879 + 428))>=3978)) then local v215=0 -0;while true do if (((172 + 92)>(347 -(339 -243))) and (v215==(709 -(252 + 456)))) then v122=2 -1;break;end if ((v215==((896 + 689) -(1208 + 377))) or ((5382 -(215 + (2727 -(677 + 498))))>((3166 + 874) -(230 + 10)))) then v123=391 -(319 + 72);v124=nil;v215=(571 -(548 + 22)) + 0;end end end if ((v122==(1928 -(1496 + 431))) or ((4283 -(80 + 26))>=(5088 -(98 + 625)))) then v125=nil;v126=nil;v122=9 -(1017 -(223 + 787));end end end elseif (((3015 + 1267)==(1813 + 2469)) and (v90<=13)) then local v127=0 -0;local v128;local v129;local v130;local v131;local v132;while true do if (((1350 + 1728)>=(3325 -1815)) and (v127==(0 -0))) then local v216=0 + 0;while true do if ((v216==((0 + 0) -0)) or ((443 + 872)==(2434 -(27 + 55)))) then v128=(303 + 1) -(247 + 57);v129=nil;v216=1 -0;end if (((2710 -1670)==(1498 -(301 + 157))) and (v216==(1 + 0))) then v127=1 + 0;break;end end end if ((v127==(1 -0)) or ((2830 -1945)<(303 + 49))) then local v217=0 -0;while true do if (((1002 -702)<=(10195 -6095)) and (v217==(1 -0))) then v127=121 -(39 + 80);break;end if ((v217==(0 + 0)) or (3918<=(2036 -(915 + 903)))) then v130=nil;v131=nil;v217=3 -2;end end end if (((192 -131)<=((2139 -(270 + 606)) -654)) and (v127==(1 + 1))) then v132=nil;while true do if (((3068 -(887 + 119))<=(1161 + (8175 -5877))) and (v128==(0 -0))) then local v228=(0 + 0) -0;while true do if ((v228==(0 + 0)) or ((271 + 1657)==(325 + 799))) then local v258=0 -0;while true do if ((v258==(0 + 0)) or (526>(3326 -(12 + 7)))) then v129=v89[4 -(1617 -(30 + 1585))];v130,v131=v84(v87[v129](v87[v129 + (1047 -(15 + 1031))]));v258=1 + 0;end if (((9950 -6043)>=(79 + 245 + 1600)) and ((1 -0)==v258)) then v228=1 + 0;break;end end end if (((3789 -(150 + 461))<((1124 -(173 + 385)) + 4029)) and (v228==(1 + 0))) then v128=1;break;end end end if ((v128==(4 -3)) or ((2801 -(838 + 218))==1708)) then local v229=(1655 -(1456 + 199)) -0;local v230;while true do if (((3570 -1107)<(4779 -(278 + 946))) and (v229==(0 + (1077 -(320 + 757))))) then v230=0 -0;while true do if (((1695 -743)<(3658 -(284 + 1208))) and (v230==(1210 -(698 + 512)))) then v72=(v131 + v129) -(1 + 0 + 0);v132=0 -0;v230=531 -(245 + 285);end if ((v230==(946 -(293 + 652))) or ((4419 -1800)>(9582 -5387))) then v128=1521 -(749 + 770);break;end end break;end end end if ((3772>=(8651 -6598)) and (v128==(1291 -(77 + 1212)))) then for v246=v129,v72 do local v247=0 -0;while true do if (((369 + 2156 + 1090)>(62 + 930)) and (v247==(0 -0))) then v132=v132 + (1124 -(111 + (1308 -(280 + 16))));v87[v246]=v130[v132];break;end end end break;end end break;end end elseif (((6762 -2191)>=(2567 -(1086 + 108))) and (v90==(26 -12))) then local v177=0 -0;local v178;local v179;while true do if ((v177==((225 -(9 + 216)) -0)) or ((2743 + 1291)==((4470 -3221) + 1226))) then v178=(0 + 0) -0;v179=nil;v177=1 -0;end if ((v177==(2 -1)) or ((9411 -4501)<(3987 -2570))) then while true do if (((75 -((51 -27) + 51))==v178) or ((5017 -(1379 + 101))<(1294 + 2170))) then v179=v89[1697 -(316 + 1379)];do return v13(v87,v179,v72);end break;end end break;end end else local v180=26 -(25 + 1);local v181;local v182;local v183;local v184;while true do if ((v180==(1 + 0)) or (((2724 -(580 + 515)) -1053)==(166 + 2400))) then v183=nil;v184=nil;v180=625 -(137 + 486);end if (((3822 -2071)==1751) and (v180==(1758 -(613 + 1145)))) then v181=(1963 -(1266 + 514)) -(138 + 45);v182=nil;v180=(3 + 0) -2;end if ((v180==2) or ((1580 -(11 + 410))<(101 + 169))) then while true do if ((((42852 -31970) -6150)==(1991 + 2741)) and (v181==(1183 -(1143 + 40)))) then local v254=0 -0;while true do if (((1232 + 2637)>=(1327 -(154 + 1156))) and (v254==(1077 -(868 + 208)))) then v181=2 -1;break;end if (((7659 -5381)>(670 -(7 + 93))) and (v254==(66 -(46 + 20)))) then v182=0 -0;v183=nil;v254=430 -(214 + 215);end end end if (((9903 -5123)>=(2037 -471)) and (v181==((5647 -3711) -(395 + 1540)))) then v184=nil;while true do if ((v182==(1 + 0)) or ((414 + 20)<=(960 -(234 + 449)))) then for v290=1 -0, #v86 do local v291=192 -(15 + 35 + 142);local v292;local v293;local v294;while true do if (((1 + (1776 -(1146 + 630)))==v291) or (964>=(4651 -3030))) then v294=nil;while true do if ((4568>(4920 -((2587 -1859) + 1225))) and (v292==(0 -0))) then v293=0 + 0;v294=nil;v292=1 + 0;end if ((v292==(67 -(37 + 29))) or ((7929 -4944)>(4964 -(2598 -658)))) then while true do if ((v293==(879 -(811 + 68))) or ((307 + 2833)<(2756 -(916 + (1475 -(64 + 681)))))) then v294=v86[v290];for v329=0 -0, #v294 do local v330=0 + 0;local v331;local v332;local v333;local v334;while true do if (((233 -85)==(32 + 116)) and (v330==(1384 -(926 + 456)))) then while true do if (((607 -414)<=(4895 -952)) and (v331==(1716 -(852 + (1736 -(398 + 475)))))) then v334=v332[2];if (((v333==v87) and (v334>=v183)) or ((2329 + 3)==4030)) then local v348=0;local v349;while true do if ((v348==(0 + (0 -0))) or ((5382 -(710 + 282))==(5684 -(692 + 203)))) then v349=232 -(179 + 53);while true do if (((2428 -((1524 -(1221 + 122)) + 1077))==(2021 -(26 + 825))) and (v349==(0 + 0))) then v184[v334]=v333[v334];v332[1442 -(294 + 1147)]=v184;break;end end break;end end end break;end if ((v331==(0 + 0)) or (2683<((2393 -(180 + 82)) -(31 + (1230 -(813 + 403)))))) then v332=v294[v329];v333=v332[2 -1];v331=(1426 -(447 + 23)) -(614 + 341);end end break;end if ((v330==(712 -(338 + 373))) or ((1143 + 581)>=(2838 -(80 + 409)))) then v333=nil;v334=nil;v330=3 -1;end if ((v330==(1049 -(719 + 330))) or ((266 -(47 + 44))>(1306 -(420 + 587)))) then v331=1763 -(619 + 1144);v332=nil;v330=1 + 0;end end end break;end end break;end end break;end if (((1724 -(449 + 174))<((13426 -6332) -2269)) and (v291==(1145 -((1423 -1094) + 816)))) then v292=0 + 0;v293=nil;v291=1 + 0;end end end break;end if ((v182==(0 + 0)) or (((7549 -(90 + 1250)) -(1050 + 773))<(6389 -3014))) then local v281=1774 -(417 + 1357);local v282;while true do if (((1390 + 84)<=(11635 -7498)) and (v281==(0 -0))) then v282=0 + 0;while true do if ((v282==(0 + 0 + 0)) or ((1457 -1027)==(4341 -(1001 + 810)))) then v183=v89[2 -(463 -(264 + 199))];v184={};v282=188 -((296 -145) + 36);end if ((v282==(1 -0)) or ((22 + 574 + 1948)>=(1679 + 2856))) then v182=1 + (0 -0);break;end end break;end end end end break;end end break;end end end elseif ((v90<=(16 + 2)) or ((862 -330)>(997 + 1004))) then if (((8559 -4924)==(11607 -7972)) and (v90<=(55 -(72 -33)))) then if ((v87[v89[737 -(496 + 239)]]==v87[v89[685 -(573 + 108)]]) or ((334 + 242)>=(3557 -(1585 + 188)))) then v71=v71 + (2 -1);else v71=v89[7 -(8 -4)];end elseif ((((107 -62) + 1504)<(1334 + 1766)) and (v90==(41 -24))) then v87[v89[1748 -(336 + 1410)]]=v89[5 -2] + v87[v89[14 -10]];else local v186=0 + 0;local v187;local v188;local v189;while true do if ((v186==(0 + 0)) or ((1442 -955)==(3652 -(1045 + 547)))) then v187=0 -0;v188=nil;v186=1054 -(471 + 582);end if ((v186==(215 -(75 + 139))) or ((12285 -(9427 -(770 + 831)))<(558 + 1845))) then v189=nil;while true do if (((3837 -(1416 + 149))==2272) and (v187==(0 -0))) then v188=v89[1982 -(495 + 1485)];v189=v87[v89[709 -(701 + 5)]];v187=859 -(360 + 498);end if (((883 + 1413)==(1985 + 311)) and (v187==(1 + 0))) then v87[v188 + (1 -0)]=v189;v87[v188]=v189[v89[144 -(10 + (191 -61))]];break;end end break;end end end elseif ((v90<=19) or ((3286 -(31 + 117))<(2527 -1986))) then local v133=0 -0;local v134;local v135;local v136;local v137;local v138;while true do if (((1643 + 909)>((3389 -1732) -850)) and (v133==(2 -1))) then v136=nil;v137=nil;v133=1098 -(794 + 302);end if (((2053 -1341)<=(3834 -(205 + 704 + 110))) and ((698 -(613 + 85))==v133)) then v134=0 -0;v135=nil;v133=1;end if ((v133==2) or (((3481 -(140 + 293)) -(357 + (597 -(362 + 109))))>(8483 -5453))) then v138=nil;while true do if (((125 + 398)<(3955 -(38 + 9 + 66))) and (v134==(0 + (659 -(71 + 588))))) then v135=0 + 0 + 0;v136=nil;v134=1 -0;end if (((1594 -(970 + 12))>(76 -(40 + 9))) and (v134==(1 -(0 -0)))) then local v231=0;while true do if (((10477 -7201)>(3399 -(142 + 63))) and ((1 -0)==v231)) then v134=7 -5;break;end if (((2954 -((468 -(18 + 119)) + 278))>(298 + 1092)) and ((0 + 0)==v231)) then v137=nil;v138=nil;v231=1884 -(655 + 1228);end end end if ((v134==(2 + 0)) or ((4610 -(348 + 1278))>=(536 + 2069 + 757))) then while true do if (((1874 -(93 + 92))>(2754 -(26 + 18 + 1126))) and ((1 + 0)==v135)) then local v259=0 + 0;local v260;while true do if ((v259==(0 + 0)) or ((11701 -(8122 -(429 + 53)))<=(6744 -4316))) then v260=0 -0;while true do if ((v260==((1621 -(638 + 250)) -((1295 -(548 + 577)) + 563))) or (((4082 -(561 + 524)) -(555 + 1177))>(1833 + 278))) then v138={};v137=v10({},{__index=function(v309,v310)local v315=0 -0;local v316;local v317;local v318;while true do if (((1295 -820)<(2973 -(7 + 12))) and (v315==(240 -(203 + 36)))) then v318=nil;while true do if (((5519 -(994 + 54))==(4653 -((416 -272) + 38))) and ((1505 -(145 + 1360))==v316)) then local v338=1934 -(902 + 1032);while true do if ((v338==(0 -(1642 -(502 + 1140)))) or ((4957 -(1790 + (371 -272)))>=(5616 -(568 + 1225)))) then v317=1161 -((2410 -(537 + 1084)) + 372);v318=nil;v338=1 + 0;end if ((v338==(1 + 0)) or ((1807 + 2749)<(1554 + 985))) then v316=1 -0;break;end end end if (((4264 -3118)<=(3028 -1121)) and ((2 -1)==v316)) then while true do if ((v317==(0 -0)) or ((153 + 1010)==((6849 -(455 + 22)) -4299))) then local v341=0 -0;while true do if ((v341==(505 -((1530 -(621 + 603)) + 199))) or ((410 + 1321 + 1547)<(697 + (2245 -(188 + 61))))) then local v346=0 + 0;while true do if (((9036 -(7549 -(242 + 446)))<(6503 -2932)) and (v346==(61 -(38 + 23)))) then v318=v138[v310];return v318[2 -1][v318[1 + 0 + 1]];end end end end end end break;end end break;end if ((v315==0) or ((3102 -(14 + 443))<=(94 + 1086))) then v316=1025 -(966 + 59);v317=nil;v315=3 -2;end end end,__newindex=function(v311,v312,v313)local v319=0 + (579 -(258 + 321));local v320;local v321;while true do if ((v319==(0 -0)) or ((5156 -3194)>=(3692 -(816 + 384)))) then v320=0 -(0 -0);v321=nil;v319=1;end if (((380 + 117)<=3417) and (v319==(1792 -(614 + 1177)))) then while true do if (((1536 -1066)<(5177 -3232)) and (v320==(356 -(82 + 274)))) then v321=v138[v312];v321[(732 + 21) -(208 + 544)][v321[(1796 -(691 + 1104)) + 1]]=v313;break;end end break;end end end});v260=(1271 -(824 + 446)) + 0;end if ((v260==(1527 -(821 + 705))) or ((957 + 89)<=(868 -154))) then v135=8 -6;break;end end break;end end end if (((10753 -(10238 -(1556 + 87)))<=(2220 + 1861)) and (v135==(916 -(354 + 560)))) then for v273=(3904 -2669) -(379 + 855),v89[7 -(1941 -(1473 + 465))] do local v274=0 + 0;local v275;while true do if ((v274==(2 -(1 -0))) or ((2146 -(745 + (1939 -(861 + 607))))==(208 + 558))) then if ((v275[2 -1]==(1589 -(841 + 746))) or ((12510 -9549)==((3274 + 353) -2526))) then v138[v273-1]={v87,v275[3 + 0]};else v138[v273-(3 -2)]={v36,v275[3 + 0]};end v86[ #v86 + (1389 -((224 -124) + 1288))]=v138;break;end if (((0 + 0)==v274) or ((1827 + (4249 -3128))>=(5977 -(352 + 866)))) then local v299=0 -(1524 -(941 + 583));while true do if ((v299==(1683 -(1032 + 651))) or ((2422 -1497)>=((4435 + 1483) -((2028 -(680 + 794)) + (2026 -(630 + 461)))))) then v71=v71 + 1 + 0;v275=v80[v71];v299=3 -2;end if ((v299==(1454 -(1079 + 374))) or ((2803 -920)>(6526 -3629))) then v274=1;break;end end end end end v87[v89[954 -(912 + 40)]]=v29(v136,v137,v37);break;end if (((662 + 634)>((3290 -(107 + 1026)) -(367 + 1494))) and (v135==(0 + 0))) then local v262=0 + 0;while true do if (((5181 -(508 + 1336))>=(543 + 331)) and (v262==((743 + 433) -(715 + 141 + 320)))) then v136=v82[v89[7 -4]];v137=nil;v262=1;end if ((v262==(1 + 0)) or ((6399 -3928)<(2276 -734))) then v135=(3263 -(1609 + 244)) -(553 + 856);break;end end end end break;end end break;end end elseif ((v90>(31 -(1 + 10))) or ((4997 -(12842 -9325))<=(273 + 485))) then v87[v89[461 -(134 + 325)]]={};else v87[v89[1 + 1]]=v87[v89[7 -4]]%v87[v89[6 -2]];end elseif (((6663 -2870)>=((1193 + 881) -(1013 + 557))) and (v90<=((941 + 733) -(375 + 1267)))) then if ((v90<=(72 -46)) or ((1107 + 644)>(8110 -6120))) then if ((v90<=23) or (((17077 -(114 + 609)) -11741)<=(4845 -1449))) then if ((v90==(673 -(647 + 4))) or ((895 + 210)==(368 + 1835))) then v37[v89[7 -(1596 -(212 + 1380))]]=v87[v89[913 -((703 -131) + 339)]];elseif (((3396 -(435 + (4311 -3024)))<=(6239 -2172)) and  not v87[v89[343 -(78 + 263)]]) then v71=v71 + (1 -0);else v71=v89[3];end elseif ((1897<=(1936 + 2918)) and (v90<=(108 -84))) then v87[v89[1 + 0 + (3 -2)]]();elseif (((1681 + (790 -525))<=(3715 -(14 + 18))) and (v90>(1065 -(569 + 125 + 346)))) then for v218=v89[1 + 1],v89[(5466 -4011) -(994 + 458)] do v87[v218]=nil;end else v87[v89[1 + 1]]=v89[1 + 2];end elseif (((891 + 396)<(2577 -(85 + 329))) and (v90<=(56 -27))) then if ((v90<=(6 + 21)) or ((17 + 455)>=(2267 -(613 + 381)))) then local v140=0 -(0 + 0);local v141;while true do if (((3324 + 61)==(2252 + 1133)) and (v140==(292 -(67 + 225)))) then v141=v89[(1439 -(338 + 1094)) -5];v87[v141](v87[v141 + 1 + (1201 -(891 + 310))]);break;end end elseif ((v90>28) or ((4109 -(75 + 533))<=(4044 -(5924 -3189)))) then v87[v89[8 -(1402 -(793 + 603))]]=v87[v89[11 -8]] * v87[v89[1 + 3]];else v87[v89[1725 -(1255 + 468)]]=v87[v89[2 + 1]] + v89[597 -(515 + 78)];end elseif (((3637 + 22)>(2395 -(86 + 1058))) and (v90<=(96 -66))) then local v142=0 -0;local v143;local v144;local v145;local v146;while true do if ((v142==(0 -0)) or ((1880 + 979)>=3768)) then v143=0 -0;v144=nil;v142=614 -(215 + 398);end if ((((16580 -11945) -(882 + 638))<=(5741 -(1547 + 359))) and (v142==(1 + 0))) then v145=nil;v146=nil;v142=2 + 0;end if ((((2864 -1862) -386)<(3405 -(467 + 0 + 291))) and (v142==(2 + 0))) then while true do if ((v143==(7 -5)) or ((1508 + 998)>=(4488 + 128))) then if ((v145>(275 -(115 + 160))) or ((5672 -(300 + 1487))<(10649 -7713))) then if (((7477 -3026)<4987) and (v146<=v87[v144 + (1850 -(827 + 1022))])) then local v276=490 -(130 + 360);while true do if ((((2157 -(685 + 203)) + 328)>=((2033 -(521 + 484)) + 542)) and (v276==(787 -(367 + 420)))) then v71=v89[695 -(119 + 573)];v87[v144 + ((37 + 99) -(55 + 78))]=v146;break;end end end elseif (((6010 -3353)==(3618 -(87 + 874))) and (v146>=v87[v144 + (1418 -(713 + 704))])) then local v277=0 + 0;local v278;while true do if ((v277==(899 -(27 + 872))) or ((325 + 2622)<(1837 -((931 -(149 + 94)) + 439)))) then v278=0 + 0;while true do if (((103 + 723)<(5586 -2534)) and (v278==(0 -0))) then v71=v89[5 -2];v87[v144 + (11 -8)]=v146;break;end end break;end end end break;end if ((v143==(0 + 0)) or ((3597 + 1002)>=(4822 -(72 + 58)))) then v144=v89[6 -4];v145=v87[v144 + ((7 -2) -3)];v143=1 -0;end if ((v143==(1 + 0)) or ((6110 -(872 + 690))<(612 + 1491))) then local v232=0 + 0;while true do if (((6822 -(1192 + 742))==(5681 -(641 + 152))) and ((0 + 0)==v232)) then v146=v87[v144] + v145;v87[v144]=v146;v232=4 -3;end if ((v232==(733 -(311 + 421))) or ((4 + 196)>(569 + 2844))) then v143=1 + 1;break;end end end end break;end end elseif (((5065 -(920 + 533))>=(1688 -1251)) and (v90==(46 -15))) then local v195=(1245 -(510 + 735)) -0;local v196;while true do if (((6384 -4077)<=(6588 -(1177 + 675))) and (v195==(13 -(12 + 1)))) then v196=v89[2];v87[v196]=v87[v196](v87[v196 + (2 -1)]);break;end end else local v197=0 -0;local v198;local v199;local v200;local v201;while true do if ((v197==(938 -(459 + 477))) or (((2717 -1260) -1058)==(3985 -2157))) then for v233=v198,v72 do local v234=52 -(16 + 36);local v235;local v236;while true do if (((2369 + 1362)<=(2431 + 2000)) and (v234==(0 + 0 + 0))) then v235=910 -(748 + 162);v236=nil;v234=1;end if (((325 + 253)<1810) and (v234==(1 + 0))) then while true do if ((v235==(224 -(218 + 6))) or ((1181 -538)>(3037 -((88 -38) + 99)))) then v236=0 -0;while true do if ((3255<(5451 -1811)) and ((522 -(310 + 212))==v236)) then v201=v201 + 1 + 0;v87[v233]=v199[v201];break;end end break;end end break;end end end break;end if ((v197==(1 + 0)) or ((3567 -(758 + 99))>=4230)) then v72=(v200 + v198) -(1 + (820 -(811 + 9)));v201=0 -0;v197=(532 -(209 + 322)) + 1;end if ((v197==(1601 -(295 + 1306))) or ((2745 -(237 + 219))>=((18533 -9338) -(13788 -8268)))) then v198=v89[1 + 1];v199,v200=v84(v87[v198](v13(v87,v198 + 1 + 0,v72)));v197=1 + 0 + 0;end end end elseif ((v90<=(63 -25)) or ((5446 -(594 + 835))<(776 + 3089))) then if ((v90<=(17 + 18)) or ((3195 -(291 + 372))<=(290 + 382))) then if (((196 + 48 + 1435)<=(7300 -2650)) and (v90<=(1991 -(1737 + 221)))) then local v147=1191 -(60 + 1131);local v148;while true do if (((978 -(151 + 126))<4208) and ((0 + 0)==v147)) then v148=v89[6 -4];v87[v148](v13(v87,v148 + (1583 -(496 + 1086)),v72));break;end end elseif (((6315 -4409)==(2729 -(144 + 679))) and (v90==34)) then local v202=1561 -(144 + 1417);local v203;local v204;local v205;while true do if ((v202==((1033 + 22) -(1014 + (199 -159)))) or ((10845 -6930)<(4070 -(22 + 161)))) then v205=nil;while true do if (((9156 -5726)>(1131 + 724)) and ((1 + 0)==v203)) then while true do if ((v204==(0 + 0)) or (((926 -(108 + 24)) + 1769)<((195 + 1597) -(128 + 383 + 500)))) then v205=v89[1 + 1];v87[v205]=v87[v205](v13(v87,v205 + 1 + 0,v72));break;end end break;end if (((999 -(133 + 550))<(2346 -(80 + 281))) and (v203==(835 -(513 + 322)))) then v204=1012 -(417 + 595);v205=nil;v203=1753 -(848 + (1340 -436));end end break;end if (((0 -0)==v202) or ((3245 -(76 + 51))<=((4162 -2922) + 94 + 109))) then v203=0 -0;v204=nil;v202=1 + 0 + 0;end end else v87[v89[(265 -(167 + 96)) + 0]]=v87[v89[1 + 2]][v89[3 + 1]];end elseif ((v90<=(348 -(218 + 94))) or ((2483 -(344 + 710))>(4546 -1838))) then local v149=0 + 0;local v150;while true do if ((v149==((0 -0) + 0 + 0)) or ((4999 -(66 + 1594))<(2467 + 340))) then v150=v89[879 -(47 + 830)];v87[v150]=v87[v150](v13(v87,v150 + (1 -(828 -(511 + 317))),v89[657 -(595 + 59)]));break;end end elseif ((v90>(110 -(19 + 54))) or ((2749 -(23 + 473))<=(2292 -(782 + 408)))) then v87[v89[1 + 1]]=v37[v89[(741 -(394 + 341)) -3]];else v87[v89[2 + 0]]=v87[v89[3 + 0]]%v89[4 + 0];end elseif ((v90<=(744 -(543 + 160))) or ((1018 + 3109)<=(1702 + 395))) then if (((603 + 2094)<(1144 + 146 + 1902)) and (v90<=((29 + 30) -20))) then local v151=1175 -(27 + 1148);local v152;local v153;local v154;local v155;local v156;while true do if (((0 -0)==v151) or ((278 + 2540)>=4225)) then v152=0 -(0 -0);v153=nil;v151=1 -0;end if ((v151==((7 -4) -2)) or ((2566 -(244 + 203))<=(439 + (2205 -(516 + 133))))) then local v221=0 -0;while true do if ((v221==(0 + 0)) or ((4461 -(447 + 128))<(5550 -(709 + 1155)))) then v154=nil;v155=nil;v221=1993 -(1491 + 128 + 373);end if ((v221==(1925 -(39 + 593 + 1292))) or ((4359 -(253 + 757))==(4215 + 606))) then v151=1576 -(302 + 1272);break;end end end if ((((1400 + 1127) -1548)<(2708 + 975)) and ((2 + 0)==v151)) then v156=nil;while true do if ((v152==((4 -1) -2)) or (((17325 -10919) -(942 + 673))<=(7135 -3363))) then local v237=(302 -(162 + 140)) -0;local v238;while true do if (((24 -(16 + 8))==v237) or (((2379 + 165) -(1589 + 100))>(4269 -(923 + 807)))) then v238=0;while true do if (((781 + 2380)<=(2218 + 1651)) and (v238==0)) then v72=(v155 + v153) -(1 -0);v156=0 + 0 + 0;v238=2 -1;end if (((12482 -9134)>=(4041 -2302)) and (v238==(1 + 0))) then v152=684 -((316 -199) + 565);break;end end break;end end end if (((1 + 1)==v152) or ((2897 -676)>(2433 + 128))) then for v248=v153,v72 do local v249=0 + 0 + 0;while true do if ((v249==(1770 -(1113 + (1880 -1223)))) or ((39 + 406)>=(1775 + 510))) then v156=v156 + 1 + 0;v87[v248]=v154[v156];break;end end end break;end if (((2662 -(349 + 1385))<=(1347 + 1308 + 1698)) and (v152==(0 + 0))) then local v239=0 -0;while true do if ((v239==(1 + 0)) or ((4006 -((592 -361) + 810))==(4066 -(493 + 1331)))) then v152=1597 -((2470 -(1286 + 230)) + 642);break;end if (((18696 -13778)>=(5224 -(248 + 69))) and ((0 -0)==v239)) then local v264=0 -0;while true do if (((3550 -(1101 + 358))<=((1831 -(411 + 329)) + 3574)) and (v264==(345 -(188 + 156)))) then v239=1 -0;break;end if ((v264==(1518 -(1161 + 357))) or ((4403 -(408 + 1229))<=(670 + 381))) then v153=v89[2 -0];v154,v155=v84(v87[v153](v13(v87,v153 + (4 -3),v89[2 + 1])));v264=2 -1;end end end end end end break;end end elseif ((3911>=(316 -(229 + 12))) and (v90>(1269 -(134 + 1095)))) then local v209=(1074 -(389 + 685)) -0;local v210;local v211;while true do if ((((6730 -2537) -(516 + (1365 -652)))<=(4810 -((1607 -(1087 + 53)) + 145))) and (v209==((1 + 0) -0))) then while true do if ((((3480 -(671 + 301)) + 928)==(1386 + 127 + 1923)) and (v210==(0 -0))) then v211=v89[176 -(88 + 86)];do return v87[v211](v13(v87,v211 + ((1 + 1) -1),v89[9 -6]));end break;end end break;end if ((v209==(0 + 0)) or ((3940 -2315)<(2551 -(497 + 917)))) then v210=1559 -((2608 -(76 + 1280)) + 307);v211=nil;v209=1349 -(159 + 1189);end end elseif ((v87[v89[1897 -(1141 + 754)]]==v89[6 -2]) or ((5073 -(275 + 750))<=(3902 -(194 + (578 -408))))) then v71=v71 + (2 -1);else v71=v89[1740 -(799 + 938)];end elseif (((40 + 20 + 455)<=((7010 -(302 + 326)) -1920)) and (v90<=(1131 -(649 + 440)))) then if ((v89[3 -1]==v87[v89[842 -(119 + 719)]]) or ((2465 + 856)>=(1640 + 2072))) then v71=v71 + (3 -2);else v71=v89[831 -(64 + 764)];end elseif ((v90>(202 -159)) or ((3768 -1667)<=(1271 -798))) then if ((v87[v89[2 + 0]]~=v89[1 + 3]) or (1348<=(2268 -(510 + 1024)))) then v71=v71 + (2 -1);else v71=v89[686 -(61 + 622)];end else local v212=1693 -(810 + 883);local v213;local v214;while true do if (((510 + 44)<(4145 -(203 + 120 + 195))) and (v212==(1596 -(759 + 836)))) then while true do if (((5767 -(1098 + 95))>(144 + 308)) and (v213==(1792 -(95 + 47 + 1650)))) then v214=v89[1 + 1];v87[v214](v13(v87,v214 + ((3274 -(1582 + 178)) -((1360 -(522 + 68)) + 743)),v89[1861 -(1148 + 710)]));break;end end break;end if ((v212==(0 -0)) or ((1397 + 1329 + (2184 -(308 + 443)))<=((775 + 185) -(27 + 9)))) then local v226=0 -0;while true do if (((6465 -4209)>(2352 -1265)) and (v226==(1612 -((2195 -(285 + 1263)) + 964)))) then v212=1 -0;break;end if ((v226==(1942 -(89 + (3490 -(914 + 723))))) or ((3662 -(1280 + 527))>=((3381 + 1191) -(10 + 5)))) then v213=0 -(0 -0);v214=nil;v226=221 -((631 -446) + 35);end end end end end v71=v71 + 1 + 0;break;end if (((353 + 227)>=(520 -207)) and (v94==(0 -0))) then local v97=0 -0;while true do if ((v97==(1117 -(1110 + 7))) or ((8136 -3864)==(3067 -(173 + 958)))) then v89=v80[v71];v90=v89[(3516 -2120) -(259 + 1136)];v97=(198 -(182 + 15)) -0;end if (((1804 -938)<=(4517 -(610 + 937))) and (v97==((432 -(10 + 18)) -(9 + 253 + 141)))) then v94=1641 -(1123 + 517);break;end end end end end end A,B=v27(v11(v75));if  not A[1] then local v91=0;local v92;while true do if (v91==0) then v92=v35[4][v71] or "?";error("Script error at ["   .. v92   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end end end return v29(v28(),{},v17)();end v0=4;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==4) then vv9());break;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end
